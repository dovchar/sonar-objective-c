# 1. Missing sonar.sources parameter
tee sonar-project.properties | cat > /dev/null; $RUNSONAR_HOME/run-sonar.sh -v -n
<<<
sonar.objectivec.project=Application.xcodeproj 
sonar.objectivec.appScheme=Application
>>>2 
ERROR - sonar.sources parameter is missing in sonar-project.properties. You must specify which directories contain your .h/.m source files (comma-separated list).
>>>= !0

# 2. Missing sonar.objectivec.project parameter (no workspace)
tee sonar-project.properties | cat > /dev/null; $RUNSONAR_HOME/run-sonar.sh -v -n
<<<
sonar.sources=src
sonar.objectivec.appScheme=Application
>>>2 
ERROR - sonar.objectivec.project parameter is missing in sonar-project.properties (name of your .xcodeproj)
>>>= !0

# 3. Missing sonar.objectivec.project parameter (w/ workspace)
tee sonar-project.properties | cat > /dev/null; $RUNSONAR_HOME/run-sonar.sh -v -n
<<<
sonar.sources=src
sonar.objectivec.workspace=Application.xcworkspace
sonar.objectivec.appScheme=Application
>>>2
ERROR - sonar.objectivec.project parameter is missing in sonar-project.properties. You must specify which projects (comma-separated list) are application code within the workspace Application.xcworkspace.
>>>= !0

# 4. Missing sonar.objectivec.appScheme parameter
tee sonar-project.properties | cat > /dev/null; $RUNSONAR_HOME/run-sonar.sh -v -n
<<<
sonar.sources=src
sonar.objectivec.project=Application.xcodeproj 
>>>2
ERROR - sonar.objectivec.appScheme parameter is missing in sonar-project.properties. You must specify which scheme is used to build your application.
>>>= !0
